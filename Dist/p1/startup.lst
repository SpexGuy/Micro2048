


ARM Macro Assembler    Page 1 


    1 00000000         ; <<< Use Configuration Wizard in Context Menu >>>
    2 00000000         ;*******************************************************
                       ***********************
    3 00000000         ;
    4 00000000         ; startup_rvmdk.S - Startup code for use with Keil's uVi
                       sion.
    5 00000000         ;
    6 00000000         ; Copyright (c) 2005-2011 Texas Instruments Incorporated
                       .  All rights reserved.
    7 00000000         ; Software License Agreement
    8 00000000         ; 
    9 00000000         ; Texas Instruments (TI) is supplying this software for 
                       use solely and
   10 00000000         ; exclusively on TI's microcontroller products. The soft
                       ware is owned by
   11 00000000         ; TI and/or its suppliers, and is protected under applic
                       able copyright
   12 00000000         ; laws. You may not combine this software with "viral" o
                       pen-source
   13 00000000         ; software in order to form a larger program.
   14 00000000         ; 
   15 00000000         ; THIS SOFTWARE IS PROVIDED "AS IS" AND WITH ALL FAULTS.
                       
   16 00000000         ; NO WARRANTIES, WHETHER EXPRESS, IMPLIED OR STATUTORY, 
                       INCLUDING, BUT
   17 00000000         ; NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY 
                       AND FITNESS FOR
   18 00000000         ; A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. TI SHALL 
                       NOT, UNDER ANY
   19 00000000         ; CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR C
                       ONSEQUENTIAL
   20 00000000         ; DAMAGES, FOR ANY REASON WHATSOEVER.
   21 00000000         ; 
   22 00000000         ; This is part of revision 8264 of the EK-LM3S1968 Firmw
                       are Package.
   23 00000000         ;
   24 00000000         ;*******************************************************
                       ***********************
   25 00000000         
   26 00000000         ;*******************************************************
                       ***********************
   27 00000000         ;
   28 00000000         ; <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ;
   30 00000000         ;*******************************************************
                       ***********************
   31 00000000 00001000 
                       Stack   EQU              0x00001000
   32 00000000         
   33 00000000         ;*******************************************************
                       ***********************
   34 00000000         ;
   35 00000000         ; <o> Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   36 00000000         ;
   37 00000000         ;*******************************************************
                       ***********************
   38 00000000 00001000 
                       Heap    EQU              0x00001000
   39 00000000         



ARM Macro Assembler    Page 2 


   40 00000000         ;*******************************************************
                       ***********************
   41 00000000         ;
   42 00000000         ; Allocate space for the stack.
   43 00000000         ;
   44 00000000         ;*******************************************************
                       ***********************
   45 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   46 00000000         StackMem
   47 00000000                 SPACE            Stack
   48 00001000         __initial_sp
   49 00001000         
   50 00001000         ;*******************************************************
                       ***********************
   51 00001000         ;
   52 00001000         ; Allocate space for the heap.
   53 00001000         ;
   54 00001000         ;*******************************************************
                       ***********************
   55 00001000                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   56 00000000         __heap_base
   57 00000000         HeapMem
   58 00000000                 SPACE            Heap
   59 00001000         __heap_limit
   60 00001000         
   61 00001000         ;*******************************************************
                       ***********************
   62 00001000         ;
   63 00001000         ; Indicate that the code in this file preserves 8-byte a
                       lignment of the stack.
   64 00001000         ;
   65 00001000         ;*******************************************************
                       ***********************
   66 00001000                 PRESERVE8
   67 00001000         
   68 00001000         ;*******************************************************
                       ***********************
   69 00001000         ;
   70 00001000         ; Place code into the reset code section.
   71 00001000         ;
   72 00001000         ;*******************************************************
                       ***********************
   73 00001000                 AREA             RESET, CODE, READONLY
   74 00000000                 THUMB
   75 00000000         
   76 00000000         ;*******************************************************
                       ***********************
   77 00000000         ;
   78 00000000         ; External declaration for the interrupt handlers used b
                       y the application.
   79 00000000         ;
   80 00000000         ;*******************************************************
                       ***********************
   81 00000000                 EXTERN           SYSTICKIntHandler
   82 00000000                 EXTERN           TIMER0IntHandler
   83 00000000                 EXTERN           UART2IntHandler
   84 00000000                 EXTERN           UART5IntHandler



ARM Macro Assembler    Page 3 


   85 00000000         
   86 00000000         ;*******************************************************
                       ***********************
   87 00000000         ;
   88 00000000         ; The vector table.
   89 00000000         ;
   90 00000000         ;*******************************************************
                       ***********************
   91 00000000                 EXPORT           __Vectors
   92 00000000         __Vectors
   93 00000000 00001000        DCD              StackMem + Stack 
                                                            ; Top of Stack    0
                                                            
   94 00000004 00000000        DCD              Reset_Handler ; Reset Handler  
                                                              1
   95 00000008 00000000        DCD              NmiSR       ; NMI Handler    2
   96 0000000C 00000000        DCD              FaultISR    ; Hard Fault Handle
                                                            r  3 
   97 00000010 00000000        DCD              IntDefaultHandler ; The MPU fau
                                                            lt handler  4
   98 00000014 00000000        DCD              IntDefaultHandler ; The bus fau
                                                            lt handler  5
   99 00000018 00000000        DCD              IntDefaultHandler ; The usage f
                                                            ault handler 6
  100 0000001C 00000000        DCD              0           ; Reserved     7
  101 00000020 00000000        DCD              0           ; Reserved     8
  102 00000024 00000000        DCD              0           ; Reserved     9
  103 00000028 00000000        DCD              0           ; Reserved     10
  104 0000002C 00000000        DCD              IntDefaultHandler ; SVCall hand
                                                            ler   11
  105 00000030 00000000        DCD              IntDefaultHandler ; Debug monit
                                                            or handler  12
  106 00000034 00000000        DCD              0           ; Reserved     13
  107 00000038 00000000        DCD              IntDefaultHandler ; The PendSV 
                                                            handler  14
  108 0000003C 00000000        DCD              SYSTICKIntHandler ; The SysTick
                                                             handler  15
  109 00000040 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port A    16
                                                            
  110 00000044 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port B    17
                                                            
  111 00000048 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port C    18
                                                            
  112 0000004C 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port D    19
                                                            
  113 00000050 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port E    20
                                                            
  114 00000054 00000000        DCD              IntDefaultHandler ; UART0 Rx an
                                                            d Tx   21
  115 00000058 00000000        DCD              IntDefaultHandler ; UART1 Rx an
                                                            d Tx   22 
  116 0000005C 00000000        DCD              IntDefaultHandler ; SSI0 Rx and
                                                             Tx   23  
  117 00000060 00000000        DCD              IntDefaultHandler ; I2C0 Master



ARM Macro Assembler    Page 4 


                                                             and Slave  24
  118 00000064 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Fault     25
  119 00000068 00000000        DCD              IntDefaultHandler ; PWM Generat
                                                            or 0   26
  120 0000006C 00000000        DCD              IntDefaultHandler ; PWM Generat
                                                            or 1   27
  121 00000070 00000000        DCD              IntDefaultHandler ; PWM Generat
                                                            or 2   28
  122 00000074 00000000        DCD              IntDefaultHandler ; Quadrature 
                                                            Encoder 0  29
  123 00000078 00000000        DCD              IntDefaultHandler ; ADC Sequenc
                                                            e 0   30
  124 0000007C 00000000        DCD              IntDefaultHandler ; ADC Sequenc
                                                            e 1   31
  125 00000080 00000000        DCD              IntDefaultHandler ; ADC Sequenc
                                                            e 2   32 
  126 00000084 00000000        DCD              IntDefaultHandler ; ADC Sequenc
                                                            e 3   33
  127 00000088 00000000        DCD              IntDefaultHandler ; Watchdog ti
                                                            mer   34
  128 0000008C 00000000        DCD              TIMER0IntHandler ; Timer 0 subt
                                                            imer A  35
  129 00000090 00000000        DCD              IntDefaultHandler ; Timer 0 sub
                                                            timer B  36
  130 00000094 00000000        DCD              IntDefaultHandler ; Timer 1 sub
                                                            timer A  37
  131 00000098 00000000        DCD              IntDefaultHandler ; Timer 1 sub
                                                            timer B  38
  132 0000009C 00000000        DCD              IntDefaultHandler ; Timer 2 sub
                                                            timer A  39
  133 000000A0 00000000        DCD              IntDefaultHandler ; Timer 2 sub
                                                            timer B  40
  134 000000A4 00000000        DCD              IntDefaultHandler ; Analog Comp
                                                            arator 0  41
  135 000000A8 00000000        DCD              IntDefaultHandler ; Analog Comp
                                                            arator 1  42 
  136 000000AC 00000000        DCD              IntDefaultHandler ; Analog Comp
                                                            arator 2  43
  137 000000B0 00000000        DCD              IntDefaultHandler ; System Cont
                                                            rol (PLL, OSC, BO) 
                                                            44
  138 000000B4 00000000        DCD              IntDefaultHandler ; FLASH Contr
                                                            ol    45
  139 000000B8 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port F    46
                                                            
  140 000000BC 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port G    47
                                                            
  141 000000C0 00000000        DCD              IntDefaultHandler 
                                                            ; GPIO Port H    48
                                                            
  142 000000C4 00000000        DCD              UART2IntHandler ; UART2 Rx and 
                                                            Tx   49
  143 000000C8 00000000        DCD              IntDefaultHandler ; SSI1 Rx and
                                                             Tx   50
  144 000000CC 00000000        DCD              IntDefaultHandler ; Timer 3 sub
                                                            timer A  51



ARM Macro Assembler    Page 5 


  145 000000D0 00000000        DCD              IntDefaultHandler ; Timer 3 sub
                                                            timer B  52
  146 000000D4 00000000        DCD              IntDefaultHandler ; I2C1 Master
                                                             and Slave  53
  147 000000D8 00000000        DCD              IntDefaultHandler ; Quadrature 
                                                            Encoder 1  54
  148 000000DC 00000000        DCD              IntDefaultHandler 
                                                            ; CAN0      55
  149 000000E0 00000000        DCD              IntDefaultHandler 
                                                            ; CAN1      56
  150 000000E4 00000000        DCD              IntDefaultHandler 
                                                            ; CAN2      57
  151 000000E8 00000000        DCD              IntDefaultHandler 
                                                            ; Ethernet     58
  152 000000EC 00000000        DCD              IntDefaultHandler 
                                                            ; Hibernate     59
  153 000000F0 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    60
                                                            
  154 000000F4 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    61
                                                            
  155 000000F8 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    62
                                                            
  156 000000FC 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    63
                                                            
  157 00000100 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    64
                                                            
  158 00000104 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    65
                                                            
  159 00000108 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    66
                                                            
  160 0000010C 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    67
                                                            
  161 00000110 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    68
                                                            
  162 00000114 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    69
                                                            
  163 00000118 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    70
                                                            
  164 0000011C 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    71
                                                            
  165 00000120 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    72
                                                            
  166 00000124 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    73
                                                            
  167 00000128 00000000        DCD              IntDefaultHandler 



ARM Macro Assembler    Page 6 


                                                            ; PLACEHOLDER    74
                                                            
  168 0000012C 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    75
                                                            
  169 00000130 00000000        DCD              IntDefaultHandler 
                                                            ; PLACEHOLDER    76
                                                            
  170 00000134 00000000        DCD              UART5IntHandler ; UART0 Rx and 
                                                            Tx   77
  171 00000138         
  172 00000138         
  173 00000138         ;*******************************************************
                       ***********************
  174 00000138         ;
  175 00000138         ; This is the code that gets called when the processor f
                       irst starts execution
  176 00000138         ; following a reset event.
  177 00000138         ;
  178 00000138         ;*******************************************************
                       ***********************
  179 00000138                 EXPORT           Reset_Handler
  180 00000138         Reset_Handler
  181 00000138         ;
  182 00000138         ; Call the C library enty point that handles startup.  T
                       his will copy
  183 00000138         ; the .data section initializers from flash to SRAM and 
                       zero fill the
  184 00000138         ; .bss section.
  185 00000138         ;
  186 00000138                 IMPORT           __main
  187 00000138 F7FF BFFE       B                __main
  188 0000013C         
  189 0000013C         ;*******************************************************
                       ***********************
  190 0000013C         ;
  191 0000013C         ; This is the code that gets called when the processor r
                       eceives a NMI.  This
  192 0000013C         ; simply enters an infinite loop, preserving the system 
                       state for examination
  193 0000013C         ; by a debugger.
  194 0000013C         ;
  195 0000013C         ;*******************************************************
                       ***********************
  196 0000013C         NmiSR
  197 0000013C E7FE            B                NmiSR
  198 0000013E         
  199 0000013E         ;*******************************************************
                       ***********************
  200 0000013E         ;
  201 0000013E         ; This is the code that gets called when the processor r
                       eceives a fault
  202 0000013E         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  203 0000013E         ; for examination by a debugger.
  204 0000013E         ;
  205 0000013E         ;*******************************************************
                       ***********************
  206 0000013E         FaultISR



ARM Macro Assembler    Page 7 


  207 0000013E E7FE            B                FaultISR
  208 00000140         
  209 00000140         ;*******************************************************
                       ***********************
  210 00000140         ;
  211 00000140         ; This is the code that gets called when the processor r
                       eceives an unexpected
  212 00000140         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  213 00000140         ; for examination by a debugger.
  214 00000140         ;
  215 00000140         ;*******************************************************
                       ***********************
  216 00000140         IntDefaultHandler
  217 00000140 E7FE            B                IntDefaultHandler
  218 00000142         
  219 00000142         ;*******************************************************
                       ***********************
  220 00000142         ;
  221 00000142         ; Make sure the end of this section is aligned.
  222 00000142         ;
  223 00000142         ;*******************************************************
                       ***********************
  224 00000142 00 00           ALIGN
  225 00000144         
  226 00000144         ;*******************************************************
                       ***********************
  227 00000144         ;
  228 00000144         ; Some code in the normal code section for initializing 
                       the heap and stack.
  229 00000144         ;
  230 00000144         ;*******************************************************
                       ***********************
  231 00000144                 AREA             |.text|, CODE, READONLY
  232 00000000         
  233 00000000         
  234 00000000         ;*******************************************************
                       ***********************
  235 00000000         ;
  236 00000000         ; Useful functions.
  237 00000000         ;
  238 00000000         ;*******************************************************
                       ***********************
  239 00000000                 EXPORT           DisableInterrupts
  240 00000000                 EXPORT           EnableInterrupts
  241 00000000         ;       EXPORT  StartCritical
  242 00000000         ;       EXPORT  EndCritical
  243 00000000                 EXPORT           WaitForInterrupt
  244 00000000         
  245 00000000         ;*********** DisableInterrupts ***************
  246 00000000         ; disable interrupts
  247 00000000         ; inputs:  none
  248 00000000         ; outputs: none
  249 00000000         DisableInterrupts
  250 00000000 B672            CPSID            I
  251 00000002 4770            BX               LR
  252 00000004         
  253 00000004         ;*********** EnableInterrupts ***************
  254 00000004         ; disable interrupts



ARM Macro Assembler    Page 8 


  255 00000004         ; inputs:  none
  256 00000004         ; outputs: none
  257 00000004         EnableInterrupts
  258 00000004 B662            CPSIE            I
  259 00000006 4770            BX               LR
  260 00000008         
  261 00000008         ;*********** StartCritical ************************
  262 00000008         ; make a copy of previous I bit, disable interrupts
  263 00000008         ; inputs:  none
  264 00000008         ; outputs: previous I bit
  265 00000008         ;StartCritical
  266 00000008         ;        MRS    R0, PRIMASK  ; save old status
  267 00000008         ;        CPSID  I            ; mask all (except faults)
  268 00000008         ;        BX     LR
  269 00000008         
  270 00000008         ;*********** EndCritical ************************
  271 00000008         ; using the copy of previous I bit, restore I bit to pre
                       vious value
  272 00000008         ; inputs:  previous I bit
  273 00000008         ; outputs: none
  274 00000008         ;EndCritical
  275 00000008         ;        MSR    PRIMASK, R0
  276 00000008         ;        BX     LR
  277 00000008         
  278 00000008         ;*********** WaitForInterrupt ************************
  279 00000008         ; go to low power mode while waiting for the next interr
                       upt
  280 00000008         ; inputs:  none
  281 00000008         ; outputs: none
  282 00000008         WaitForInterrupt
  283 00000008 BF30            WFI
  284 0000000A 4770            BX               LR
  285 0000000C         
  286 0000000C                 EXPORT           getHeapBase
  287 0000000C                 EXPORT           getStackBase
  288 0000000C                 EXPORT           getHeapSize
  289 0000000C         
  290 0000000C         ;*******************************************************
                       ***********************
  291 0000000C         ; Returns the address of the heap base
  292 0000000C         ;*******************************************************
                       ***********************
  293 0000000C         getHeapBase
  294 0000000C F240 0000 
              F2C0 0000        MOV32            R0, __heap_base
  295 00000014 4770            BX               LR
  296 00000016         
  297 00000016         ;*******************************************************
                       ***********************
  298 00000016         ; Returns the address of the heap base
  299 00000016         ;*******************************************************
                       ***********************
  300 00000016         getHeapSize
  301 00000016 F240 0000 
              F2C0 0000        MOV32            R0, __heap_base
  302 0000001E F240 0100 
              F2C0 0100        MOV32            R1, __heap_limit
  303 00000026 EBA1 0000       SUB              R0, R1, R0
  304 0000002A 4770            BX               LR



ARM Macro Assembler    Page 9 


  305 0000002C         
  306 0000002C         ;*******************************************************
                       ***********************
  307 0000002C         ; Returns the address of the heap base
  308 0000002C         ;*******************************************************
                       ***********************
  309 0000002C         getStackBase
  310 0000002C F240 0000 
              F2C0 0000        MOV32            R0, StackMem
  311 00000034 4770            BX               LR
  312 00000036         
  313 00000036         ;*******************************************************
                       ***********************
  314 00000036         ;
  315 00000036         ; The function expected of the C library startup code fo
                       r defining the stack
  316 00000036         ; and heap memory locations.  For the C library version 
                       of the startup code,
  317 00000036         ; provide this function so that the C library initializa
                       tion code can find out
  318 00000036         ; the location of the stack and heap.
  319 00000036         ;
  320 00000036         ;*******************************************************
                       ***********************
  321 00000036                 IF               :DEF: __MICROLIB
  322 00000036                 EXPORT           __initial_sp
  323 00000036                 EXPORT           __heap_base
  324 00000036                 EXPORT           __heap_limit
  325 00000036                 ELSE
  334                          ENDIF
  335 00000036         
  336 00000036         ;*******************************************************
                       ***********************
  337 00000036         ;
  338 00000036         ; Make sure the end of this section is aligned.
  339 00000036         ;
  340 00000036         ;*******************************************************
                       ***********************
  341 00000036 00 00           ALIGN
  342 00000038         
  343 00000038         ;*******************************************************
                       ***********************
  344 00000038         ;
  345 00000038         ; Tell the assembler that we're done.
  346 00000038         ;
  347 00000038         ;*******************************************************
                       ***********************
  348 00000038                 END
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\sta
rtup.d -o.\startup.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\PACK\ARM\CMSIS\3.20.3
\CMSIS\Include -IC:\Keil\ARM\Inc\Luminary --predefine="__EVAL SETA 1" --predefi
ne="__MICROLIB SETA 1" --list=.\startup.lst Startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 45 in file Startup.s
   Uses
      None
Comment: STACK unused
StackMem 00000000

Symbol: StackMem
   Definitions
      At line 46 in file Startup.s
   Uses
      At line 93 in file Startup.s
      At line 310 in file Startup.s

__initial_sp 00001000

Symbol: __initial_sp
   Definitions
      At line 48 in file Startup.s
   Uses
      At line 322 in file Startup.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 55 in file Startup.s
   Uses
      None
Comment: HEAP unused
HeapMem 00000000

Symbol: HeapMem
   Definitions
      At line 57 in file Startup.s
   Uses
      None
Comment: HeapMem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 56 in file Startup.s
   Uses
      At line 294 in file Startup.s
      At line 301 in file Startup.s
      At line 323 in file Startup.s

__heap_limit 00001000

Symbol: __heap_limit
   Definitions
      At line 59 in file Startup.s
   Uses
      At line 302 in file Startup.s
      At line 324 in file Startup.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FaultISR 0000013E

Symbol: FaultISR
   Definitions
      At line 206 in file Startup.s
   Uses
      At line 96 in file Startup.s
      At line 207 in file Startup.s

IntDefaultHandler 00000140

Symbol: IntDefaultHandler
   Definitions
      At line 216 in file Startup.s
   Uses
      At line 97 in file Startup.s
      At line 98 in file Startup.s
      At line 99 in file Startup.s
      At line 104 in file Startup.s
      At line 105 in file Startup.s
      At line 107 in file Startup.s
      At line 109 in file Startup.s
      At line 110 in file Startup.s
      At line 111 in file Startup.s
      At line 112 in file Startup.s
      At line 113 in file Startup.s
      At line 114 in file Startup.s
      At line 115 in file Startup.s
      At line 116 in file Startup.s
      At line 117 in file Startup.s
      At line 118 in file Startup.s
      At line 119 in file Startup.s
      At line 120 in file Startup.s
      At line 121 in file Startup.s
      At line 122 in file Startup.s
      At line 123 in file Startup.s
      At line 124 in file Startup.s
      At line 125 in file Startup.s
      At line 126 in file Startup.s
      At line 127 in file Startup.s
      At line 129 in file Startup.s
      At line 130 in file Startup.s
      At line 131 in file Startup.s
      At line 132 in file Startup.s
      At line 133 in file Startup.s
      At line 134 in file Startup.s
      At line 135 in file Startup.s
      At line 136 in file Startup.s
      At line 137 in file Startup.s
      At line 138 in file Startup.s
      At line 139 in file Startup.s
      At line 140 in file Startup.s
      At line 141 in file Startup.s
      At line 143 in file Startup.s
      At line 144 in file Startup.s
      At line 145 in file Startup.s
      At line 146 in file Startup.s
      At line 147 in file Startup.s
      At line 148 in file Startup.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 149 in file Startup.s
      At line 150 in file Startup.s
      At line 151 in file Startup.s
      At line 152 in file Startup.s
      At line 153 in file Startup.s
      At line 154 in file Startup.s
      At line 155 in file Startup.s
      At line 156 in file Startup.s
      At line 157 in file Startup.s
      At line 158 in file Startup.s
      At line 159 in file Startup.s
      At line 160 in file Startup.s
      At line 161 in file Startup.s
      At line 162 in file Startup.s
      At line 163 in file Startup.s
      At line 164 in file Startup.s
      At line 165 in file Startup.s
      At line 166 in file Startup.s
      At line 167 in file Startup.s
      At line 168 in file Startup.s
      At line 169 in file Startup.s
      At line 217 in file Startup.s

NmiSR 0000013C

Symbol: NmiSR
   Definitions
      At line 196 in file Startup.s
   Uses
      At line 95 in file Startup.s
      At line 197 in file Startup.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 73 in file Startup.s
   Uses
      None
Comment: RESET unused
Reset_Handler 00000138

Symbol: Reset_Handler
   Definitions
      At line 180 in file Startup.s
   Uses
      At line 94 in file Startup.s
      At line 179 in file Startup.s

__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 92 in file Startup.s
   Uses
      At line 91 in file Startup.s
Comment: __Vectors used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 231 in file Startup.s
   Uses
      None
Comment: .text unused
DisableInterrupts 00000000

Symbol: DisableInterrupts
   Definitions
      At line 249 in file Startup.s
   Uses
      At line 239 in file Startup.s
Comment: DisableInterrupts used once
EnableInterrupts 00000004

Symbol: EnableInterrupts
   Definitions
      At line 257 in file Startup.s
   Uses
      At line 240 in file Startup.s
Comment: EnableInterrupts used once
WaitForInterrupt 00000008

Symbol: WaitForInterrupt
   Definitions
      At line 282 in file Startup.s
   Uses
      At line 243 in file Startup.s
Comment: WaitForInterrupt used once
getHeapBase 0000000C

Symbol: getHeapBase
   Definitions
      At line 293 in file Startup.s
   Uses
      At line 286 in file Startup.s
Comment: getHeapBase used once
getHeapSize 00000016

Symbol: getHeapSize
   Definitions
      At line 300 in file Startup.s
   Uses
      At line 288 in file Startup.s
Comment: getHeapSize used once
getStackBase 0000002C

Symbol: getStackBase
   Definitions
      At line 309 in file Startup.s
   Uses
      At line 287 in file Startup.s
Comment: getStackBase used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap 00001000

Symbol: Heap
   Definitions
      At line 38 in file Startup.s
   Uses
      At line 58 in file Startup.s
Comment: Heap used once
Stack 00001000

Symbol: Stack
   Definitions
      At line 31 in file Startup.s
   Uses
      At line 47 in file Startup.s
      At line 93 in file Startup.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SYSTICKIntHandler 00000000

Symbol: SYSTICKIntHandler
   Definitions
      At line 81 in file Startup.s
   Uses
      At line 108 in file Startup.s
Comment: SYSTICKIntHandler used once
TIMER0IntHandler 00000000

Symbol: TIMER0IntHandler
   Definitions
      At line 82 in file Startup.s
   Uses
      At line 128 in file Startup.s
Comment: TIMER0IntHandler used once
UART2IntHandler 00000000

Symbol: UART2IntHandler
   Definitions
      At line 83 in file Startup.s
   Uses
      At line 142 in file Startup.s
Comment: UART2IntHandler used once
UART5IntHandler 00000000

Symbol: UART5IntHandler
   Definitions
      At line 84 in file Startup.s
   Uses
      At line 170 in file Startup.s
Comment: UART5IntHandler used once
__main 00000000

Symbol: __main
   Definitions
      At line 186 in file Startup.s
   Uses
      At line 187 in file Startup.s
Comment: __main used once
5 symbols
360 symbols in table
